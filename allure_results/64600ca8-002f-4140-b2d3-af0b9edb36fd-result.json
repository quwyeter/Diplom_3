{"name": "Тест при создании нового заказа счётчик Выполнено за сегодня увеличивается", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1093, 121). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n\tGetHandleVerifier [0x00007FF754C5EEB2+31554]\n\t(No symbol) [0x00007FF754BD7EE9]\n\t(No symbol) [0x00007FF754A9872A]\n\t(No symbol) [0x00007FF754AF012E]\n\t(No symbol) [0x00007FF754AEDAF2]\n\t(No symbol) [0x00007FF754AEAF8B]\n\t(No symbol) [0x00007FF754AEA156]\n\t(No symbol) [0x00007FF754ADC151]\n\t(No symbol) [0x00007FF754B0D02A]\n\t(No symbol) [0x00007FF754ADBA76]\n\t(No symbol) [0x00007FF754B0D240]\n\t(No symbol) [0x00007FF754B2C977]\n\t(No symbol) [0x00007FF754B0CDD3]\n\t(No symbol) [0x00007FF754ADA33B]\n\t(No symbol) [0x00007FF754ADAED1]\n\tGetHandleVerifier [0x00007FF754F68B2D+3217341]\n\tGetHandleVerifier [0x00007FF754FB5AF3+3532675]\n\tGetHandleVerifier [0x00007FF754FAB0F0+3489152]\n\tGetHandleVerifier [0x00007FF754D0E786+750614]\n\t(No symbol) [0x00007FF754BE376F]\n\t(No symbol) [0x00007FF754BDEB24]\n\t(No symbol) [0x00007FF754BDECB2]\n\t(No symbol) [0x00007FF754BCE17F]\n\tBaseThreadInitThunk [0x00007FFC813A7344+20]\n\tRtlUserThreadStart [0x00007FFC82B026B1+33]", "trace": "self = <tests.test_main_page.TestMainPage object at 0x0000016AF23473E0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2aca39f7dac2aec2f0a9534cf108a7d5\")>\n\n    @allure.title('Тест при создании нового заказа счётчик Выполнено за сегодня увеличивается')\n    def test_when_creating_a_new_order_counter_increases_today(self, driver):\n        page = MainPage(driver)\n        counter_1 = page.get_counter_today()\n        page.make_order()\n>       page.click_cross_button()\n\ntests\\test_main_page.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:21: in click_cross_button\n    self.click_to_element(Locators.CROSS_BUTTON)\npages\\base_page.py:25: in click_to_element\n    self.driver.find_element(*locator).click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000016AF2437E90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF754BCE17F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC813A7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC82B026B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1093, 121). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=126.0.6478.182)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF754C5EEB2+31554]\nE       \t(No symbol) [0x00007FF754BD7EE9]\nE       \t(No symbol) [0x00007FF754A9872A]\nE       \t(No symbol) [0x00007FF754AF012E]\nE       \t(No symbol) [0x00007FF754AEDAF2]\nE       \t(No symbol) [0x00007FF754AEAF8B]\nE       \t(No symbol) [0x00007FF754AEA156]\nE       \t(No symbol) [0x00007FF754ADC151]\nE       \t(No symbol) [0x00007FF754B0D02A]\nE       \t(No symbol) [0x00007FF754ADBA76]\nE       \t(No symbol) [0x00007FF754B0D240]\nE       \t(No symbol) [0x00007FF754B2C977]\nE       \t(No symbol) [0x00007FF754B0CDD3]\nE       \t(No symbol) [0x00007FF754ADA33B]\nE       \t(No symbol) [0x00007FF754ADAED1]\nE       \tGetHandleVerifier [0x00007FF754F68B2D+3217341]\nE       \tGetHandleVerifier [0x00007FF754FB5AF3+3532675]\nE       \tGetHandleVerifier [0x00007FF754FAB0F0+3489152]\nE       \tGetHandleVerifier [0x00007FF754D0E786+750614]\nE       \t(No symbol) [0x00007FF754BE376F]\nE       \t(No symbol) [0x00007FF754BDEB24]\nE       \t(No symbol) [0x00007FF754BDECB2]\nE       \t(No symbol) [0x00007FF754BCE17F]\nE       \tBaseThreadInitThunk [0x00007FFC813A7344+20]\nE       \tRtlUserThreadStart [0x00007FFC82B026B1+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Получить количество заказов за сегодня", "status": "passed", "steps": [{"name": "Клик по кнопке Лента заказов", "status": "passed", "steps": [{"name": "Клик по элементу", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//p[text()=\"Лента Заказов\"]')"}], "start": 1721656567511, "stop": 1721656569225}], "start": 1721656567510, "stop": 1721656569225}, {"name": "Скролл до элемента", "status": "passed", "steps": [{"name": "Поиск элемента по локатору с ожиданием", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//p[text()=\"Выполнено за сегодня:\"]/following-sibling::p')"}], "start": 1721656569225, "stop": 1721656569775}], "parameters": [{"name": "locator", "value": "('xpath', '//p[text()=\"Выполнено за сегодня:\"]/following-sibling::p')"}], "start": 1721656569225, "stop": 1721656569782}, {"name": "Получить текст элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//p[text()=\"Выполнено за сегодня:\"]/following-sibling::p')"}], "start": 1721656569782, "stop": 1721656569807}], "start": 1721656567510, "stop": 1721656569807}, {"name": "Создание заказа", "status": "passed", "steps": [{"name": "Добавить текст в элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//label[text()=\"Email\"]/following::input')"}, {"name": "text", "value": "'12345678@gmail.com'"}], "start": 1721656570082, "stop": 1721656570197}, {"name": "Добавить текст в элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@name = \"Пароль\"]')"}, {"name": "text", "value": "'12345678'"}], "start": 1721656570197, "stop": 1721656570279}, {"name": "Клик по элементу", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//Button[text()=\"Войти\"]')"}], "start": 1721656570279, "stop": 1721656570355}, {"name": "Добавление ингредиента в заказ", "status": "passed", "steps": [{"name": "Перетаскивание элемента", "status": "passed", "steps": [{"name": "Поиск элемента по локатору с ожиданием", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//img[@alt=\"Флюоресцентная булка R2-D3\"]')"}], "start": 1721656570355, "stop": 1721656570895}, {"name": "Поиск элемента по локатору с ожиданием", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//span[text()=\"Перетяните булочку сюда (верх)\"]')"}], "start": 1721656570895, "stop": 1721656570921}], "parameters": [{"name": "locator1", "value": "('xpath', '//img[@alt=\"Флюоресцентная булка R2-D3\"]')"}, {"name": "locator2", "value": "('xpath', '//span[text()=\"Перетяните булочку сюда (верх)\"]')"}], "start": 1721656570355, "stop": 1721656571483}], "start": 1721656570355, "stop": 1721656571483}, {"name": "Клик по элементу", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//button[text()=\"Оформить заказ\"]')"}], "start": 1721656571483, "stop": 1721656571564}], "start": 1721656569807, "stop": 1721656571565}, {"name": "Клик на крестик", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1093, 121). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n\tGetHandleVerifier [0x00007FF754C5EEB2+31554]\n\t(No symbol) [0x00007FF754BD7EE9]\n\t(No symbol) [0x00007FF754A9872A]\n\t(No symbol) [0x00007FF754AF012E]\n\t(No symbol) [0x00007FF754AEDAF2]\n\t(No symbol) [0x00007FF754AEAF8B]\n\t(No symbol) [0x00007FF754AEA156]\n\t(No symbol) [0x00007FF754ADC151]\n\t(No symbol) [0x00007FF754B0D02A]\n\t(No symbol) [0x00007FF754ADBA76]\n\t(No symbol) [0x00007FF754B0D240]\n\t(No symbol) [0x00007FF754B2C977]\n\t(No symbol) [0x00007FF754B0CDD3]\n\t(No symbol) [0x00007FF754ADA33B]\n\t(No symbol) [0x00007FF754ADAED1]\n\tGetHandleVerifier [0x00007FF754F68B2D+3217341]\n\tGetHandleVerifier [0x00007FF754FB5AF3+3532675]\n\tGetHandleVerifier [0x00007FF754FAB0F0+3489152]\n\tGetHandleVerifier [0x00007FF754D0E786+750614]\n\t(No symbol) [0x00007FF754BE376F]\n\t(No symbol) [0x00007FF754BDEB24]\n\t(No symbol) [0x00007FF754BDECB2]\n\t(No symbol) [0x00007FF754BCE17F]\n\tBaseThreadInitThunk [0x00007FFC813A7344+20]\n\tRtlUserThreadStart [0x00007FFC82B026B1+33]\n\n", "trace": "  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\pages\\main_page.py\", line 21, in click_cross_button\n    self.click_to_element(Locators.CROSS_BUTTON)\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 25, in click_to_element\n    self.driver.find_element(*locator).click()\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Клик по элементу", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1093, 121). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n\tGetHandleVerifier [0x00007FF754C5EEB2+31554]\n\t(No symbol) [0x00007FF754BD7EE9]\n\t(No symbol) [0x00007FF754A9872A]\n\t(No symbol) [0x00007FF754AF012E]\n\t(No symbol) [0x00007FF754AEDAF2]\n\t(No symbol) [0x00007FF754AEAF8B]\n\t(No symbol) [0x00007FF754AEA156]\n\t(No symbol) [0x00007FF754ADC151]\n\t(No symbol) [0x00007FF754B0D02A]\n\t(No symbol) [0x00007FF754ADBA76]\n\t(No symbol) [0x00007FF754B0D240]\n\t(No symbol) [0x00007FF754B2C977]\n\t(No symbol) [0x00007FF754B0CDD3]\n\t(No symbol) [0x00007FF754ADA33B]\n\t(No symbol) [0x00007FF754ADAED1]\n\tGetHandleVerifier [0x00007FF754F68B2D+3217341]\n\tGetHandleVerifier [0x00007FF754FB5AF3+3532675]\n\tGetHandleVerifier [0x00007FF754FAB0F0+3489152]\n\tGetHandleVerifier [0x00007FF754D0E786+750614]\n\t(No symbol) [0x00007FF754BE376F]\n\t(No symbol) [0x00007FF754BDEB24]\n\t(No symbol) [0x00007FF754BDECB2]\n\t(No symbol) [0x00007FF754BCE17F]\n\tBaseThreadInitThunk [0x00007FFC813A7344+20]\n\tRtlUserThreadStart [0x00007FFC82B026B1+33]\n\n", "trace": "  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 25, in click_to_element\n    self.driver.find_element(*locator).click()\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\clst\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('xpath', '//button[@type=\"button\"]')"}], "start": 1721656571565, "stop": 1721656572683}], "start": 1721656571565, "stop": 1721656572684}], "start": 1721656567510, "stop": 1721656572688, "uuid": "8a5b97af-8385-4731-8819-4a53722f57a4", "historyId": "9695a936c83cc967afdd08686db15717", "testCaseId": "9695a936c83cc967afdd08686db15717", "fullName": "tests.test_main_page.TestMainPage#test_when_creating_a_new_order_counter_increases_today", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "HOME-PC"}, {"name": "thread", "value": "1988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}